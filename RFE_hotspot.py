# -*- coding: utf-8 -*-
"""RFE_hotspot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YzGBy6WYtnulPy4FwVeZb15xGd-GtQgA
"""

import warnings; warnings.filterwarnings("ignore")

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import confusion_matrix
from sklearn.metrics import matthews_corrcoef
from sklearn.metrics import precision_score

X = np.load('feature_krg.npy')
Y = np.load('label_krg.npy')

X.shape

Y.shape

Xtrain, Xtest, Ytrain, Ytest = train_test_split(X, Y, test_size = 0.3, random_state = 111)

scaler = StandardScaler()

Xtrain = scaler.fit_transform(Xtrain)
Xtest = scaler.transform(Xtest)

# Feature Selection

model = DecisionTreeClassifier(random_state=0)
model.fit(Xtrain, Ytrain)

importantFeatures = model.feature_importances_
SF = np.argsort(importantFeatures)[::-1][:int(len(importantFeatures)*0.50)]

SF.shape

model = DecisionTreeClassifier(random_state=0)
model.fit(Xtrain[:, SF], Ytrain)
Yp = model.predict(Xtest[:, SF])

Accuracy = []
Sensitivity = []
Specificity = []
Precision = []
MCC = []

CM = confusion_matrix(y_pred=Yp, y_true=Ytest)
TN, FP, FN, TP = CM.ravel()

MCC.append(matthews_corrcoef(y_true=Ytest, y_pred=Yp))
Sensitivity.append( TP / (TP + FN) )
Specificity.append( TN / (TN + FP) )
Precision.append(precision_score(y_true=Ytest, y_pred=Yp))

print(accuracy_score(y_true=Ytest, y_pred=Yp))
print('Sensitivity: {0:.2f}'.format(np.mean(Sensitivity)))
print('Specificity: {0:.2f}'.format(np.mean(Specificity)))
print('MCC: {0:.2f}'.format(np.mean(MCC)))
print('Precision: {0:.2f}'.format(np.mean(Precision)))

